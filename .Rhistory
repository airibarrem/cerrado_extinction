teste$data@attributes
teste$data@'attributes'
teste@attributes
data(teste)@attributes
teste@attr
teste$data[[1]]
teste$data$ID
teste$data$ID[[1]]
?RasterLayer
showClass('RasterLayer')
getAllMethods(teste)
getAttributes(teste)
plot(LU.now %in% c(6,7,8))
slot(teste,attributes)
slot(teste,'attributes')
getSlots(teste)
get(teste)
nat.mask = plot(LU.now %in% c(6,7,8))
nat.mask = LU.now %in% c(6,7,8)
nat.mask = nat.mask / nat.mask
nat.mask = nat.mask / nat.mask
nat.mask[nat.mask>0]=0
plot(nat.mask)
nat.mask = LU.now %in% c(6,7,8)
teste = rcompose(paste0('./Mammals_Cerrado/MML/',sp.files[1])))
teste = rcompose(paste0('./Mammals_Cerrado/MML/',sp.files[1]))
rcompose = function(x, bgx){
# read input raster
rast = raster(x)
# uses CRS from bgd if input raster has its CRS missing
if (!exists(crs(rast))){crs(rast) = crs(bgx)}
# projects input raster into background raster
rast = projectRaster(rast,bgx,method='ngb')
# remove NA values from input raster
rast[is.na(rast)]=0
# mask input raster using the background one
rast = rast + bgx
return(rast)
}
teste = rcompose(paste0('./Mammals_Cerrado/MML/',sp.files[1]))
teste = rcompose(paste0('./Mammals_Cerrado/MML/',sp.files[1]),bgd)
rcompose = function(x, bgx){
# read input raster
rast = raster(x)
# projects input raster into background raster
if (exists(crs(rast))) {rast = projectRaster(rast,bgx,method='ngb')}
# remove NA values from input raster
rast[is.na(rast)]=0
# mask input raster using the background one
rast = rast + bgx
return(rast)
}
LU.now = rcompose('./LU/uso_da_terra_culturas2safra.tif',bgd)
bgd = rasterize(shapefile('./biome/Cerrado.shp'),
raster(paste0('./Mammals_Cerrado/MML/',sp.files[1])))
bgd = bgd/bgd
bgd[bgd>0]=0
LU.now = rcompose('./LU/uso_da_terra_culturas2safra.tif',bgd)
rcompose = function(x, bgx){
# read input raster
rast = raster(x)
# projects input raster into background raster
rast = projectRaster(rast,bgx,method='ngb')
# remove NA values from input raster
rast[is.na(rast)]=0
# mask input raster using the background one
rast = rast + bgx
return(rast)
}
LU.now = rcompose('./LU/uso_da_terra_culturas2safra.tif',bgd)
crs(LU.now)
crs(teste)
teste = raster(paste0('./Mammals_Cerrado/MML/',sp.files[1]))
crs(teste)
teste = rcompose((paste0('./Mammals_Cerrado/MML/',sp.files[1])),bgd)
plot(teste)
crop(teste,nat.mask)
plot(crop(teste,nat.mask))
source('~/IIS_PROJECTS/cerrado_extinction/habitat.R')
nat.cov = LU.now %in% c(6,7,8)
plot(nat.cov)
nat.cov = nat.cov + bgd
plot(nat.cov)
plot(teste)
plot(teste*nat.cov)
plot(teste)
plot(LU.now)
plot(for.cov)
plot(nat.cov)
plot(teste)
plot(teste*nat.cov)
zonal(teste*nat.cov)
zonal(teste*nat.cov,nat.cov)
zonal(teste*nat.cov,nat.cov,fun=sum)
zonal(teste*nat.cov/(teste*nat.cov),nat.cov,fun=sum)
zonal(teste*nat.cov,teste,fun=sum)
teste
nat.cov = (LU.now %in% c(6,7,8)) + bgd
plot(nat.cov)
nat.cov = (LU.now %in% c(6,7,8))
plot(nat.cov)
nat.cov = (LU.now %in% c(6,7,8)) + bgd
plot(nat.cov)
teste = raster(paste0('./Mammals_Cerrado/MML/',sp.files[1]))
plot(teste)
plot(teste*nat.cov)
teste*nat.cov
plot(teste*nat.cov)
teste
source('~/IIS_PROJECTS/cerrado_extinction/habitat.R')
zonal(teste*nat.cov,nat.cov,fun='sum')
teste = rcompose(paste0('./Mammals_Cerrado/MML/',sp.files[1]),bgd)
plot(teste*nat.cov)
zonal(teste*nat.cov,nat.cov,fun='sum')
?zonal
zonal(teste*nat.cov,LU.now,fun='sum')
cond.area = function(x, xcond, convert.ha=TRUE, px.val=F){
# Returns an approximate area of pixels in "x" that satisfy "xcond" condition.
# "xcond" must be a logical raster (px values either 0 or 1).
zone.count = 0
zone.res = zonal(x,xcond,fun=function(x, na.rm){ if(na.rm){length(na.omit(x))}
else{length(x)}})
if(length(zone.res[,1]) > 1){zone.count = zone.res[[2,2]]}
px.a = mean(values(area(x)))
res = px.a*zone.count
if (convert.ha==TRUE){res = res*100}
if (px.val == T){
print(paste("Px count:",zone.count))
res = zone.count}
return(res)
}
cond.area(teste*nat.cov,nat.cov)
mean(values(area(nat.cov)))
cond.area(teste*nat.cov,nat.cov,px.val=T)
?area
cond.area(teste*nat.cov,nat.cov)
mask.area = function(xa.path, mask, bgx){rcompose(xa.path,bgx)*mask}
teste2 = mask.area(paste0('./Mammals_Cerrado/MML/',sp.files[1]),nat.cov,bgd)
plot(teste2)
cond.area(teste2,nat.cov)
teste3 = lapply(sp.files,mask.area,nat.cov,bgd)
dir('./Mammals_Cerrado/MML')
teste3 = lapply(sp.files,mask.area,nat.cov,bgd)
teste3 = lapply(paste0('./Mammals_Cerrado/MML/'sp.files),mask.area,nat.cov,bgd)
teste3 = lapply(paste0('./Mammals_Cerrado/MML/',sp.files),mask.area,nat.cov,bgd)
?lapply
paste0('./Mammals_Cerrado/MML/',sp.files)
paste0('./Mammals_Cerrado/MML/',sp.files)[1]
paste0('./Mammals_Cerrado/MML/',sp.files)[2]
teste3 = lapply(paste0('./Mammals_Cerrado/MML/',sp.files),mask.area,nat.cov,bgd)
bgd = rasterize(shapefile('./biome/Cerrado.shp'),
raster(paste0('./Mammals_Cerrado/MML/',sp.files[1])))
bgd = bgd/bgd
bgd[bgd>0]=0
LU.now = rcompose('./LU/uso_da_terra_culturas2safra.tif',bgd)
plot(LU.now)
bgd = rasterize(shapefile('./biome/Cerrado.shp'),
raster(paste0('./Mammals_Cerrado/MML/',sp.files[3])))
bgd = rasterize(shapefile('./biome/Cerrado.shp'),
raster(paste0('./Mammals_Cerrado/MML/',sp.files[1])))
rm(list=ls())
require(raster)
heaviside = function(x){stepfun(0,c(0,1))(x)}
rcompose = function(x, bgx){
# read input raster
rast = raster(x)
# projects input raster into background raster
rast = projectRaster(rast,bgx,method='ngb')
# remove NA values from input raster
rast[is.na(rast)]=0
# mask input raster using the background one
rast = rast + bgx
return(rast)
}
cond.area = function(x, xcond, convert.ha=TRUE, px.val=F){
# Returns an approximate area of pixels in "x" that satisfy "xcond" condition.
# "xcond" must be a logical raster (px values either 0 or 1).
zone.count = 0
zone.res = zonal(x,xcond,fun=function(x, na.rm){ if(na.rm){length(na.omit(x))}
else{length(x)}})
if(length(zone.res[,1]) > 1){zone.count = zone.res[[2,2]]}
px.a = mean(values(area(x)))
res = px.a*zone.count
if (convert.ha==TRUE){res = res*100}
if (px.val == T){
print(paste("Px count:",zone.count))
res = zone.count}
return(res)
}
mask.area = function(x.path, mask, bgx){rcompose(xa.path,bgx)*mask}
sp.files = dir('./Mammals_Cerrado/MML')
bgd = rasterize(shapefile('./biome/Cerrado.shp'),
raster(paste0('./Mammals_Cerrado/MML/',sp.files[1])))
bgd = rasterize(shapefile('./biome/Cerrado.shp'),
raster(paste0('./Mammals_Cerrado/MML/',sp.files[5])))
bgd = rasterize(shapefile('./biome/Cerrado.shp'),
raster(paste0('./Mammals_Cerrado/MML/',sp.files[150])))
bgd = bgd/bgd
bgd[bgd>0]=0
LU.now = rcompose('./LU/uso_da_terra_culturas2safra.tif',bgd)
plot(LU.now)
teste3 = lapply(paste0('./Mammals_Cerrado/MML/',sp.files),mask.area,nat.cov,bgd)
mask.area = function(x.path, mask, bgx){rcompose(x.path,bgx)*mask}
teste3 = lapply(paste0('./Mammals_Cerrado/MML/',sp.files),mask.area,nat.cov,bgd)
paste0('./Mammals_Cerrado/MML/',sp.files)
paste0('./Mammals_Cerrado/MML/',sp.files)[150]
mask.area(paste0('./Mammals_Cerrado/MML/',sp.files)[150],nat.cov,bgd)
crs((paste0('./Mammals_Cerrado/MML/',sp.files)[150])
crs(paste0('./Mammals_Cerrado/MML/',sp.files)[150])
crs(raster(paste0('./Mammals_Cerrado/MML/',sp.files)[150]))
exists(crs(raster(paste0('./Mammals_Cerrado/MML/',sp.files)[150])))
is.na(crs(raster(paste0('./Mammals_Cerrado/MML/',sp.files)[150])))
rcompose = function(x, bgx){
# read input raster
rast = raster(x)
# projects input raster into background raster
if(!is.na(crs(rast))){rast = projectRaster(rast,bgx,method='ngb')}
# remove NA values from input raster
rast[is.na(rast)]=0
# mask input raster using the background one
rast = rast + bgx
return(rast)
}
teste3 = lapply(paste0('./Mammals_Cerrado/MML/',sp.files),mask.area,nat.cov,bgd)
nat.cov = (LU.now %in% c(6,7,8)) + bgd
teste3 = lapply(paste0('./Mammals_Cerrado/MML/',sp.files),mask.area,nat.cov,bgd)
plot(teste3[[150]])
plot(teste3[[138]])
plot(rcompose(raster(paste0('./Mammals_Cerrado/MML/',sp.files)[138]),bgd))
plot(teste3[[138]])
plot(teste3[[120]])
plot(rcompose(raster(paste0('./Mammals_Cerrado/MML/',sp.files)[120]),bgd))
plot(teste3[[1]])
plot(rcompose(raster(paste0('./Mammals_Cerrado/MML/',sp.files)[1]),bgd))
plot(teste3[[2]])
plot(teste3[[3]])
plot(teste3[[4]])
plot(teste3[[5]])
bgd = rasterize(shapefile('./biome/Cerrado.shp'),
raster(paste0('./Mammals_Cerrado/MML/',sp.files[120])))
bgd = bgd/bgd
bgd[bgd>0]=0
LU.now = rcompose('./LU/uso_da_terra_culturas2safra.tif',bgd)
plot(LU.now)
teste = rcompose(paste0('./Mammals_Cerrado/MML/',sp.files[1]),bgd)
plot(teste)
teste = rcompose(paste0('./Mammals_Cerrado/MML/',sp.files[120]),bgd)
plot(teste)
plot(rcompose(paste0('./Mammals_Cerrado/MML/',sp.files)[1],bgd))
plot(rcompose(paste0('./Mammals_Cerrado/MML/',sp.files)[4],bgd))
plot(rcompose(paste0('./Mammals_Cerrado/MML/',sp.files)[120],bgd))
require(snowfall)
teste4 = lapply(teste3,cond.area,nat.cov)
teste4
cond.area(teste3[1],nat.cov)
cond.area(teste3[[1]],nat.cov)
plot(teste3[[1]])
plot(teste3[[2]])
cond.area(teste3[[2]],nat.cov)
zonal(teste3[[2]],nat.cov)
zonal(teste3[[2]],nat.cov,fun=function(x, na.rm){ if(na.rm){length(na.omit(x))}                                     else{length(x)}}))
zonal(teste3[[2]],nat.cov,fun=function(x, na.rm){ if(na.rm){length(na.omit(x))}                                     else{length(x)}})
zonal(teste3[[1]],nat.cov,fun=function(x, na.rm){ if(na.rm){length(na.omit(x))}                                     else{length(x)}})
zonal(teste3[[120]],nat.cov,fun=function(x, na.rm){ if(na.rm){length(na.omit(x))}                                     else{length(x)}})
teste3[[120]]
values(teste3[[120]])
zonal(teste3[[120]],nat.cov,fun=function(x, na.rm){ if(na.rm){length(na.omit(x))}                                     else{length(x)}})
plot(teste3[[120]])
teste3[[120]]
plot(nat.cov)
plot(teste3[[120]])
plot(nat.cov)
plot(teste3[[120]])
plot(nat.cov)
nat.cov
unique(values(nat.cov))
unique(values(teste3[[120]]))
cond.area(nat.cov,nat.cov)
cond.area(nat.cov,nat.cov,px.val=T)
zonal(teste3[120],nat.cov)
zonal(teste3[[120]],nat.cov)
zonal(teste3[[1]],nat.cov)
zonal(teste3[[1]],nat.cov,fun=sum)
zonal(teste3[[120]],nat.cov,fun=sum)
plot(teste3[[1]])
plot(log(teste3[[1]]))
plot(teste3[[1]])
plot(log(teste3[[1]]))
plot(teste3[[1]])
teste3[[120]][nat.cov==1]
plot(teste3[[120]][nat.cov==1])
teste3[[120]][nat.cov==1]
unique(teste3[[120]][nat.cov==1])
unique(teste3[[120]][nat.cov==0])
exp(unique(teste3[[120]][nat.cov==0]))
unique(exp(teste3[[120]][nat.cov==0]))
unique(teste3[[120]][nat.cov==0])
unique(teste3[[120]][nat.cov==1])
exp(unique(teste3[[120]][nat.cov==1]))
log(unique(teste3[[120]][nat.cov==1]))
zonal(teste3[[120]],bgd,fun=function(x, na.rm){ if(na.rm){length(na.omit(x))}                                     else{length(x)}})
zonal(nat.cov,teste3[[120]],fun=function(x, na.rm){ if(na.rm){length(na.omit(x))}                                     else{length(x)}})
zonal(nat.cov,teste3[[1]],fun=function(x, na.rm){ if(na.rm){length(na.omit(x))}                                     else{length(x)}})
teste4 = lapply(teste3,function(x){cond.area(nat.cov,x)})
teste4
zonal(nat.cov,teste3[[1]],fun=function(x, na.rm){ if(na.rm){length(na.omit(x))}                                     else{length(x)}})
?zonal
cond.area(teste3[[2]],nat.cov)
cond.area(nat.cov,teste3[[2]])
cond.area(teste3[[2]],nat.cov)
cond.area(nat.cov,teste3[[2]],px.val=T)
sfInit(parallel = T, cpus = 3, type = 'SOCK')
maps = sfLapply(paste0('./Mammals_Cerrado/MML/',sp.files),mask.area,nat.cov,bgd)
areas = sfLapply(maps,function(x){cond.area(nat.cov,x)})
sfStop()
source('~/IIS_PROJECTS/cerrado_extinction/habitat.R')
m(list=ls())
rm(list=ls())
source('~/IIS_PROJECTS/cerrado_extinction/habitat.R')
sfStop()
?sfInit
sfInit(parallel = T, cpus = 3, type = 'SOCK')
maps = sfLapply(paste0('./Mammals_Cerrado/MML/',sp.files),mask.area,nat.cov,bgd)
areas = sfLapply(maps,function(x){cond.area(nat.cov,x)})
sfStop()
sfInit(parallel = T, cpus = 3, type = 'SOCK')
maps = sfLapply(paste0('./Mammals_Cerrado/MML/',sp.files),mask.area,nat.cov,bgd)
sfStop()
sfInit(parallel = T, cpus = 3, type = 'SOCK')
sfExport(list=ls())
maps = sfLapply(paste0('./Mammals_Cerrado/MML/',sp.files),mask.area,nat.cov,bgd)
require(raster)
require(snowfall)
sfExport(list=ls())
maps = sfLapply(paste0('./Mammals_Cerrado/MML/',sp.files),mask.area,nat.cov,bgd)
sfExportAll
maps = sfLapply(paste0('./Mammals_Cerrado/MML/',sp.files),mask.area,nat.cov,bgd)
sfExportAll()
maps = sfLapply(paste0('./Mammals_Cerrado/MML/',sp.files),mask.area,nat.cov,bgd)
source('~/IIS_PROJECTS/cerrado_extinction/habitat.R')
sfLibrary(raster)
maps = sfLapply(paste0('./Mammals_Cerrado/MML/',sp.files),mask.area,nat.cov,bgd)
source('~/IIS_PROJECTS/cerrado_extinction/habitat.R')
source('~/IIS_PROJECTS/cerrado_extinction/habitat.R')
LU.bau = rcompose('./LU/Brasil2050.tif',bgd)
plot(LU.bau)
nat.bau = (LU.now %in% c(6,7,8)) + bgd
plot(nat.now)
nat.now = (LU.now %in% c(6,7,8)) + bgd
plot(nat.now)
plot(nat.bau)
LU.bau
nat.bau = (LU.now %in% 70:72)) + bgd
nat.bau = (LU.now %in% 70:72) + bgd
plot(nat.now)
plot(nat.bau)
raster('./LU/Brasil2050.tif')
areas
source('~/IIS_PROJECTS/cerrado_extinction/habitat.R')
source('~/IIS_PROJECTS/cerrado_extinction/habitat.R')
nat.now = (LU.now %in% c(6,7,8)) + bgd
nat.bau = (LU.now %in% c(6,7,8)) + bgd
plot(nat.now)
plot(nat.bau)
LU.bau = rcompose('./LU/Brasil2050.tif',bgd)
nat.bau = (LU.bau %in% c(6,7,8)) + bgd
plot(nat.bau)
plot(nat.now)
plot(nat.bau)
areas
maps[[1]]
plot(maps[[1]])
plot(maps[[2]])
plot(maps[[1]])
?grep
sp.files[1]
grep('_f',sp.files[1])
grep('_f',sp.files)
sp.files[grep('_f',sp.files)]
sp.now = sp.files[grep('_p',sp.files)]
sp.now = sp.files[grep('_p',sp.files)]
sp.bau = sp.files[grep('_f',sp.files)]
sp.now
sp.now = sp.files[grep('_p.asc',sp.files)]
sp.bau = sp.files[grep('_f.asc',sp.files)]
sp.files = dir('./Mammals_Cerrado/MML')
sp.now = sp.files[grep('_p.asc',sp.files)]
sp.bau = sp.files[grep('_f.asc',sp.files)]
sp.now
sp.bau
rm(list=ls())
source('~/IIS_PROJECTS/cerrado_extinction/habitat.R')
source('~/IIS_PROJECTS/cerrado_extinction/habitat.R')
maps.now
maps.now = c(pot.now,hab.now)
areas.now = sfLapply(maps.now,function(x){cond.area(nat.now,x)})
rm(list=ls())
source('~/IIS_PROJECTS/cerrado_extinction/habitat.R')
bau.df = data.frame(Sp=sp.bau)
now.df = data.frame(Sp=sp.now, Pot_area=areas.now[1:length(sp.now)],
Hab_area=areas.now[1+length(sp.now),2*length(sp.now)])
now.df = data.frame(Sp=sp.now, Pot_area=areas.now[1:length(sp.now)],
Hab_area=areas.now[1+length(sp.now):2*length(sp.now)])
now.df = data.frame(Sp=sp.now, Pot_area=areas.now[1:length(sp.now)])
now.df = data.frame(Sp=sp.now)
now.df$Pot_Area = areas.now[1+length(sp.now):2*length(sp.now)]
now.df$Pot_Area = areas.now[1:length(sp.now)]
now.df$Hab_area = areas.now[1+length(sp.now):2*length(sp.now)]
1+length(sp.now)
2*length(sp.now)
now.df$Hab_area = areas.now[1+length(sp.now):2*length(sp.now)]
now.df
areas.now[1+length(sp.now):2*length(sp.now)]
areas.now
unlist(areas.now)
now.df$Hab_Area = unlist(areas.now)[1+length(sp.now):2*length(sp.now)]
unlist(areas.now)[1+length(sp.now):2*length(sp.now)]
1+length(sp.now):2*length(sp.now)
1+length(sp.now)
now.df$Hab_Area = unlist(areas.now)[1+length(sp.now):(2*length(sp.now))]
1+length(sp.now):(2*length(sp.now))
unlist(areas.now)[1+length(sp.now):(2*length(sp.now))]
now.df$Hab_Area = unlist(areas.now)[1+length(sp.now):(2*length(sp.now))-1]
now.df$Hab_Area = unlist(areas.now)[1+length(sp.now):(2*length(sp.now)-1)]
now.df
bau.df = data.frame(Sp=sp.bau)
bau.df$Pot_Area = unlist(areas.bau)[1:length(sp.bau)]
bau.df$Hab_Area = unlist(areas.bau)[1+length(sp.bau):(2*length(sp.bau)-1)]
bau.df
now.df = data.frame(Sp=subs('_mml_f.asc','',sp.now))
subs('_mml_f.asc','',sp.now)
now.df = data.frame(Sp=sub('_mml_f.asc','',sp.now))
now.df$Pot_Area = unlist(areas.now)[1:length(sp.now)]
now.df$Hab_Area = unlist(areas.now)[1+length(sp.now):(2*length(sp.now)-1)]
now.df
?sub
source('~/IIS_PROJECTS/cerrado_extinction/habitat.R')
now.df = data.frame(Sp=sub('_mml_p.asc','',sp.now))
now.df$Pot_Area = unlist(areas.now)[1:length(sp.now)]
now.df$Hab_Area = unlist(areas.now)[1+length(sp.now):(2*length(sp.now)-1)]
source('~/IIS_PROJECTS/cerrado_extinction/habitat.R')
now.df
now.df = data.frame(Sp=sub("_",'',sub('_mml_p.asc','',sp.now)))
now.df$Pot_Area = unlist(areas.now)[1:length(sp.now)]
now.df$Hab_Area = unlist(areas.now)[1+length(sp.now):(2*length(sp.now)-1)]
now.df
now.df = data.frame(Sp=sub("_",' ',sub('_mml_p.asc','',sp.now)))
now.df$Pot_Area = unlist(areas.now)[1:length(sp.now)]
now.df$Hab_Area = unlist(areas.now)[1+length(sp.now):(2*length(sp.now)-1)]
now.df
bau.df = data.frame(Sp=sub("_",' ',sub('_mml_f.asc','',sp.bau)))
bau.df$Pot_Area = unlist(areas.bau)[1:length(sp.bau)]
bau.df$Hab_Area = unlist(areas.bau)[1+length(sp.bau):(2*length(sp.bau)-1)]
bau.df
source('~/IIS_PROJECTS/cerrado_extinction/habitat.R')
nat.now
plot(nat.now)
source('~/IIS_PROJECTS/cerrado_extinction/hab_gilberto.R')
source('~/IIS_PROJECTS/cerrado_extinction/hab_britaldo_redux.R')
source('~/IIS_PROJECTS/cerrado_extinction/hab_britaldo_redux.R')
sub("_",' ',,sp.files)
now.df = data.frame(Sp=sub("_",' ',sp.files))
now.df$Pot_Area = pot.areas
now.df$Hab_Area = hab.areas
now.df$BAU_Area = bau.areas
now.df = now.df[order(now.df$Sp),]
teste.df = now.df
teste.df
teste.df[,3:4] = now.df[,3:4] / now.df[,2]
now.df[,3:4]
now.df[,2]
teste.df[,3:4] = now.df[,3:4] / as.numeric(now.df[,2])
as.numeric(now.df[,2])
teste.df[,3:4] = as.numeric(now.df[,3:4]) / as.numeric(now.df[,2])
now.df
write.csv(now.df, file='Flora_otimizagro')
now.df = data.frame(Sp=sub("_",' ',sub('.asc','',sp.files)))
now.df$Pot_Area = pot.areas
now.df$Hab_Area = hab.areas
now.df$BAU_Area = bau.areas
now.df = now.df[order(now.df$Sp),]
now.df
write.csv(now.df, file='Flora_otimizagro')
teste.df = now.df
teste.df[,3:4] = now.df[,3:4] / now.df[,2]
now.df[,3:4]
now.df[,3:4] / now.df[,2]
now.df[,2]
write.csv(now.df, file='Flora_otimizagro')
now.df
now.df[,3:4] / now.df[,2]
now.df[,3:4]
now.df[,2]
teste.df[,3:4] = now.df[,3:4] / as.numeric(now.df[,2])
as.numeric(now.df[,2])
now.df[,3:4] / as.numeric(now.df[,2])
length(now.df[,3:4])
length(now.df[1,3:4])
now.df = data.frame(Sp=sub("_",' ',sub('.asc','',sp.files)))
now.df$Pot_Area = as.numeric(pot.areas)
now.df$Hab_Area = as.numeric(hab.areas)
now.df$BAU_Area = as.numeric(bau.areas)
now.df = now.df[order(now.df$Sp),]
teste.df = now.df
teste.df[,3:4] = now.df[,3:4] / as.numeric(now.df[,2])
write.csv(now.df, file='Flora_otimizagro')
teste.df
write.csv(now.df, file='Flora_otimizagro')
write.csv2(now.df, file='Flora_otimizagro_2')
write.csv(teste.df, file='Flora_otimizagro_perc')
write.csv2(test.df, file='Flora_otimizagro_perc_2')
write.csv2(teste.df, file='Flora_otimizagro_perc_2')
