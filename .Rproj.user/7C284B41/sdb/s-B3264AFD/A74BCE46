{
    "contents" : "rm(list=ls())\nrequire(raster)\nrequire(snowfall)\n\nheaviside = function(x){stepfun(0,c(0,1))(x)}\n\nrcompose = function(x, bgx){\n  # read input raster, if x is filename\n  if (is.character(x)){x = raster(x)}\n  # projects input raster into background raster\n  if(!is.na(crs(x))){x = projectRaster(x,bgx,method='ngb')}\n  # remove NA values from input raster\n  x[is.na(x)]=0\n  # mask input raster using the background one\n  x = x + bgx\n  return(x)\n}\n\ncond.area = function(x, xcond, convert.ha=TRUE, px.val=F){\n  # Returns an approximate area of pixels in \"x\" that satisfy \"xcond\" condition.\n  # \"xcond\" must be a logical raster (px values either 0 or 1).\n  zone.count = 0\n  zone.res = zonal(x,xcond,fun=function(x, na.rm){ if(na.rm){length(na.omit(x))}\n                                                   else{length(x)}})\n  if(length(zone.res[,1]) > 1){zone.count = zone.res[[2,2]]}\n  px.a = mean(values(area(x)))\n  res = px.a*zone.count\n  if (convert.ha==TRUE){res = res*100}\n  if (px.val == T){\n    print(paste(\"Px count:\",zone.count))\n    res = zone.count}\n  return(res)\n}\n\n# Intersects x with y, and masks the result with bgx\nintersect.raster = function(x, y, bgx){\n  if(is.character(x)){x=rcompose(x,bgx)}\n  if(is.character(y)){y=rcompose(y,bgx)}\n  return(rcompose(x*y,bgx))}\n\n\n###\n\n\n# Getting the list of names of all sp.dist files to be included\nsp.files = dir('./Mammals_Cerrado/MML')\n\n# Splitting files in (p)resent and (f)uture maps\nsp.now = sp.files[grep('_p.asc',sp.files)]\nsp.bau = sp.files[grep('_f.asc',sp.files)]\n\n\n# Rasterizing the background shapefile Using first file of sp.dist. as template\nbgd = rasterize(shapefile('./biome/Cerrado.shp'),\n                raster(paste0('./Mammals_Cerrado/MML/',sp.files[1])))\n\n# preparing bgd to be used as addition mask (add to a raster to apply the mask)\nbgd = bgd/bgd\nbgd[bgd>0]=0\n\n\n# Land-use rasters\nLU.now = rcompose('./LU/uso_da_terra_culturas2safra.tif',bgd)\nLU.bau = rcompose('./LU/Brasil2050.tif',bgd)\n\n# native vegetation mask (according to classes in original land-use rasters)\nnat.now = (LU.now %in% c(6,7,8)) + bgd\nnat.bau = (LU.bau %in% c(6,7,8)) + bgd\n\n\n# Applying intersect.raster and cond.area to all sp.dist files\nsfInit(parallel = T, cpus = 3, type = 'SOCK')\n  sfExportAll()\n  sfLibrary(raster)\n  # sp. potential area maps today\n  pot.now = sfLapply(paste0('./Mammals_Cerrado/MML/',sp.now),rcompose,bgd)\n  # sp. habitats today\n  hab.now = sfLapply(paste0('./Mammals_Cerrado/MML/',sp.now),intersect.raster,nat.now,bgd)\n  #sp. habitats under future LUC\n  luc.now = sfLapply(paste0('./Mammals_Cerrado/MML/',sp.now),intersect.raster,nat.bau,bgd)\n  # List of all the maps for today\n  maps.now = c(pot.now,hab.now)\n  # List of the areas (in ha) corresponding to the list of maps above\n  areas.now = sfLapply(maps.now,function(x){cond.area(nat.now,x)})\n  areas.now = c(areas.now,sfLapply(luc.now,function(x){cond.area(nat.bau,x)}))\n  #\n  # Same procedure, but for projected maps (BAU 2050)\n  pot.bau = sfLapply(paste0('./Mammals_Cerrado/MML/',sp.bau),rcompose,bgd)\n  hab.bau = sfLapply(paste0('./Mammals_Cerrado/MML/',sp.bau),intersect.raster,nat.bau,bgd)\n  # Effect of climate change under a zero deforestation (LNAE) scenario\n  cc.lnae = sfLapply(paste0('./Mammals_Cerrado/MML/',sp.bau),intersect.raster,nat.now,bgd)\n  maps.bau = c(pot.bau,hab.bau)\n  areas.bau = sfLapply(maps.bau,function(x){cond.area(nat.bau,x)})\n  areas.bau = c(areas.bau,sfLapply(cc.lnae,function(x){cond.area(nat.bau,x)}))\nsfStop()\n\n# Computing area data.frames\nnow.df = data.frame(Sp=sub(\"_\",' ',sub('_mml_p.asc','',sp.now)))\nnow.df$Pot_Area = unlist(areas.now)[1:length(sp.now)]\nnow.df$Hab_Area = unlist(areas.now)[(1+length(sp.now)):(2*length(sp.now))]\nnow.df$LUC_Area = unlist(areas.now)[(1+2*length(sp.now)):(3*length(sp.now))]\nnow.df = now.df[order(now.df$Sp),]\n\nbau.df = data.frame(Sp=sub(\"_\",' ',sub('_mml_f.asc','',sp.bau)))\nbau.df$Pot_Area = unlist(areas.bau)[1:length(sp.bau)]\nbau.df$Hab_Area = unlist(areas.bau)[(1+length(sp.bau)):(2*length(sp.bau))]\nbau.df$LNAE_Area = unlist(areas.bau)[(1+2*length(sp.bau)):(3*length(sp.bau))]\nbau.df = bau.df[order(bau.df$Sp),]\n\ncomb.df = data.frame(Sp=now.df[now.df$Sp %in% bau.df$Sp,1])\ncomb.df$Now_Pot = now.df[now.df$Sp %in% bau.df$Sp,2]\ncomb.df$Now_Hab = now.df[now.df$Sp %in% bau.df$Sp,3]\ncomb.df$Int_LUC = now.df[now.df$Sp %in% bau.df$Sp,4]\ncomb.df$CC_LNAE = bau.df[,4]\ncomb.df$BAU_Pot = bau.df[,2]\ncomb.df$BAU_Hab = bau.df[,3]\n\nteste.df = comb.df\nteste.df[,3:6] = comb.df[,3:6] / comb.df[,2]\nteste.df[,7] =  comb.df[,7] / comb.df[,6]\n\n# Outputting area data.frames\nwrite.csv(now.df, file='Mammals_Present')\nwrite.csv(now.df, file='Mammals_BAU')\nwrite.csv(comb.df, file='Mammals_combined')\nwrite.csv(teste.df, file='Mammals_combined_perc')\n\nwrite.csv2(now.df, file='Mammals_Present_2')\nwrite.csv2(now.df, file='Mammals_BAU_2')\nwrite.csv2(comb.df, file='Mammals_combined_2')\nwrite.csv2(teste.df, file='Mammals_combined_perc_2')\n",
    "created" : 1459291588248.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "391121797",
    "id" : "A74BCE46",
    "lastKnownWriteTime" : 1459279654,
    "path" : "~/IIS_PROJECTS/cerrado_extinction/hab_britaldo.R",
    "project_path" : "hab_britaldo.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}