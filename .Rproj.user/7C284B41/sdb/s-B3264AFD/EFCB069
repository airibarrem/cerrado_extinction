{
    "contents" : "# Computes habitat rasters and area (in ha)\nhab.calc = function(sp.files, LU.file, bgd.file, nat.classes = c(1),\n                    sp.dir=getwd(), LU.dir=getwd(), bgd.dir=getwd(),\n                    string.rem='', print.CSV=T, sf.on=T, cores=3){\n  # INPUTS:\n  # sp.files    list of filenames of the sp. dist. rasters of be included\n  # LU.file     filename with the map (.shp or .asc) of the land-use to be used\n  # bgd.file    filename with the map (.shp or .asc) of contour of the region\n  # nat.classes list with the class IDs in LU.file corresponding to natural veg.\n  # sp.dir      character line containing filepath to sp.files\n  # LU.dir      character line containing filepath to LI.file\n  # bgd.dir     character line containing filepath to bgd.files\n  # string.rem  string to be removed from sp. filenames in final print\n  # print.CSV   logical. prints csv with areas in ha when T\n  # sf.on       logical. uses snowfall parallel computing when T\n  # cores       number of cores to be used in snowfall calls\n  #\n  #\n  library('raster','snowfall')\n  #\n  # Preparing background raster\n  bgd = ifelse(grepl('.shp',bgd.file),\n               rasterize(shapefile(paste0(bgd.dir,bgd.file)),\n                         raster(paste0(sp.dir,sp.files[1]))),\n               rcompose(paste0(bgd.dir,bgd.file)))\n  # preparing bgd to be used as addition mask (add to a raster to apply mask)\n  bgd = bgd/bgd\n  bgd[bgd>0]=0\n  # Land-use raster\n  LU.ras = ifelse(grepl('.shp',LU.file),\n                  rcompose(rasterize(shapefile(paste0(LU.dir,LU.file)),\n                                     raster(paste0(sp.dir,sp.files[1]))),bgd),\n                  rcompose(paste0(LU.dir,LU.file),bgd))\n  # native vegetation mask (according to classes in original land-use rasters)\n  nat.ras = (LU.ras %in% nat.classes) + bgd\n  # Starts snowfall cluster, and exports packages and variables to all cores\n  sfInit(parallel = sf.on, cpus = cores, type = 'SOCK')\n  sfExportAll()\n  sfLibrary(raster)\n  # list with rasterLayers for all species in sp.files\n  sp.cube = sfLapply(paste0(sp.dir,sp.files),rcompose,bgd)\n  # list with rasterLayers with sp. habitats (combining sp.cube w nat.veg map)\n  hab.cube = sfLapply(sp.cube, intersect.area,nat.ras,bgd)\n  #sp. habitats under future LUC\n  # List of all the maps\n  maps.cube = c(sp.cube,hab.cube)\n  # List of the areas (in ha) corresponding to the list of maps above\n  areas.now = sfLapply(maps.cube,function(x){cond.area(nat.ras,x)})\n  sfStop()\n  # Organizing output data.frame\n  res.df = data.frame(Sp=sub(\"_\",' ',sub(string.rem,'',sp.now)))\n  res.df$Pot_Area = unlist(areas.now)[1:length(sp.now)]\n  res.df$Hab_Area = unlist(areas.now)[(1+length(sp.now)):(2*length(sp.now))]\n  res.df = now.df[order(now.df$Sp),]\n  # Printing output CSV\n  if(print.CSV){write.csv(res.df, file=paste0('hab_calc_results_',Sys.date()) )}\n  return(list('Areas_table'=res.df,'Sp._rasters'=sp.cube, 'Habitat_rasters'=hab.cube))\n}\n\nhab.calc(sp.bau,'Brasil2050.tif','Cerrado.shp',nat.classes=c(6,7,8),\n         sp.dir='./Mammals_Cerrado/MML',LU.dir='./LU/',bgd.dir='.biome',\n         string.rem='_mml_f.asc')\n",
    "created" : 1459278871516.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3465839378",
    "id" : "EFCB069",
    "lastKnownWriteTime" : 1459278925,
    "path" : "~/IIS_PROJECTS/cerrado_extinction/hab_calc.R",
    "project_path" : "hab_calc.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}